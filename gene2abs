#!/usr/bin/perl
use Bio::AlignIO;
use Bio::Tools::GFF;
use Bio::SeqFeatureI;
use Bio::Cigar;


use strict;
sub revCigar {
	my ($cigar) = @_;
	
	$cigar=~ s/M/M /g;
	$cigar=~ s/I/I /g;
	$cigar=~ s/D/D /g;
	$cigar=~ s/M/M /g;
	$cigar=~ s/H/H /g;
	$cigar=~ s/S/S /g;
	my @cigarsp = split /\s+/, $cigar;
	@cigarsp= reverse @cigarsp;
	my $cigar_rev = join("", @cigarsp);
	return ($cigar_rev);
}

if(@ARGV < 4) {
	print ("Usage: gene2abs <gfffile> <infile> <U|D> <length>\n\n\tgffile\t\tGFF3 genome file\n\tinfile\t\tFile in relative coordinates (can be SAM or MAF)\n\tU|D\t\tUpstrea or Downstream\n");
	print ("\tlength\t\tregulatory feature length\n\n");
	exit();
}

my $gfffile = $ARGV[0];
my $infile = $ARGV[1];
my $fileformat;

# find out file format
if($infile =~ m/\.sam$/) {
	$fileformat="SAM";
} elsif ($infile =~ m/\.maf$/) {
	$fileformat="MAF";
} else {
	die "File " . $infile . " format is invalid (can accept MAF or SAM file only)\n";
}

my $upordownstream = $ARGV[2];
my $length = $ARGV[3];
my $outbedorthfilename = $ARGV[4];
my $outconservbedfilename = $ARGV[5];

my $gff = Bio::Tools::GFF->new(-file => $gfffile,
							   -gff_version => 3);
							   
													
#First, find the gene absolute coordinates
my $genechr = "";
my $genestart;
my $geneend;
my $strand;				
my $genename;
my $orthname;


if($fileformat eq "MAF") {
	
	my $maf = Bio::AlignIO->new(-file => $infile,
								-format => "maf");

	while ( my $aln = $maf->next_aln) {
		my @seqs = $aln->each_seq;
	
		my $sol = $seqs[0];
		my $other = $seqs[1];

		#If its the first time, find the gene
		if($genechr eq "") {
			my $feature;
			$genename = $sol->id();
			$genename =~ s/\.c1//;
			$orthname = $other->id();
		
			while(($feature = $gff->next_feature) && $genechr eq "") {
				my @tags = $feature->get_tag_values("Name");
				if( $tags[0] eq $genename) {
					$genechr=$feature->seq_id;
					$genestart=$feature->start;
					$geneend=$feature->end;
					$strand = $feature->strand;
					if ($strand == -1) {
						$strand = "-";
					} else {
						$strand = "+";
					}
				}
			}
		}
		my $aln_start = $sol->start;
		my $aln_end = $sol->end;
	
		if($strand eq "+") {
			if($upordownstream eq "U") {
				$sol->start($genestart - $length + $aln_start -1 );
				$sol->end($genestart - $length + $aln_end - 1);		
			} else { #if its downstream
				$sol->start($geneend + $aln_start );
				$sol->end($geneend + $aln_end );		
			}
			$sol->id($genechr);
		} else {
			if($upordownstream eq "U") {
				$sol->start($geneend + $length - $aln_end );
				$sol->end($geneend + $length - $aln_start );		
			} else {
				$sol->start($genestart - $aln_end );
				$sol->end($genestart - $aln_start );		
			}
			$sol->id($genechr);	
		}
		printf ( $sol->id . "\t" . $orthname . "\tCNS\t" . ($sol->start+1) . "\t" . ($sol->end+1) . "\t%.1f\t%s\t.\t" . "Name=" . $orthname . ";Gene=" . $genename . "\n", $aln->percentage_identity, ".");
	}
}



if($fileformat eq "SAM") {

	open(my $sam , "<", $infile);
	while ( my $line =<$sam>) {
		if(substr($line,0,1) eq '@' ) {
			#If this is the gene coordinate. find it.
			if(substr($line,0,3) eq '@SQ') {
				my @fields = split /\t/, $line;
				
				$genename = $fields[1];
				$genename =~ s/\.c1//;
				$genename =~ s/SN://;

				while((my $feature = $gff->next_feature) && $genechr eq "") {
					my @tags = $feature->get_tag_values("Name");
					if( $tags[0] eq $genename) {
						$genechr=$feature->seq_id;
						$genestart=$feature->start;
						$geneend=$feature->end;
						$strand = $feature->strand;
						if ($strand == -1) {
							$strand = "-";
						} else {
							$strand = "+";
						}
					}
				}
				printf("\@SQ\tSN:" . $genechr . "\tLN:9999999999\n");
				
			} else {
				print $line;
			}
		} else {
			chomp $line;
			my @fields= split /\t/,$line;
	
			$orthname = $genename . ":" . $fields[0];
			$orthname =~ s/\.c1//;
			$fields[0] = $orthname;
			$fields[2] = $genechr;
			my $aln_start = $fields[3];
			my $cigar = Bio::Cigar->new($fields[5]);
			my $aln_end = $fields[3] + $cigar->reference_length;
			$fields[5] =~ s/[0-9]+H//g;
			
			#if it's reverse, then reverse
			#if($fields[1]==16) {
			#	$fields[9] = reverse $fields[9];
			#	$fields[9] =~ tr/ATGCatgc/TACGtacg/;
			#	$fields[5] = revCigar($fields[5]);
				#also, shift the alignment
				#$aln_start = $aln_start + $cigar->reference_length;
				#$aln_end = $aln_end - $cigar->reference_length;
			#}
			#$fields[1]=0;
			
			if($strand eq "+") {
				if($upordownstream eq "U") {
					$fields[3] =  $genestart - $length + $aln_start;
				} else { #if its downstream
					$fields[3] = $geneend + $aln_start + 1;	
				}
			} else {
				$fields[9] = reverse $fields[9];
				$fields[9] =~ tr/ATGCatgc/TACGtacg/;
				# reverse CIGAR...
				$fields[5] = revCigar($fields[5]);

				if($upordownstream eq "U") {
					$fields[3] = $geneend + $length - $aln_end +2;
				} else {
					$fields[3] = $genestart - $aln_end +2;	
				}
			}

			printf ( join("\t", @fields) ."\n");
		}
	}
}
